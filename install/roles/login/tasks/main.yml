---
- name: 1-0 如果不存在则创建 /data/update 目录
  file:
    path: /data/update
    state: directory
    mode: '0755'

- name: 1-1 分发文件
  copy:
    src: "{{ install_dir }}/install.zip"
    dest: /data/update/install.zip

- name: 1-2 创建解压目录
  file:
    path: /data/server/login
    state: directory
    mode: '0755'

- name: 1-3 解压文件
  unarchive:
    src: /data/update/install.zip
    dest: /data/server/login
    remote_src: yes

- name: 1-4 复制server.log.ini和server.lua和white_list.txt
  copy:
    src: "{{ item }}"
    dest: "/data/server/login/etc/{{ item | basename }}"
  loop:
    - "{{ install_dir }}/etc/server.log.ini"
    - "{{ install_dir }}/etc/server.lua"
    - "{{ install_dir }}/etc/white_list.txt"

- name: 1-5 生成空白limit_create.txt文件
  file:
    path: /data/server/login/etc/limit_create.txt
    state: touch

- name: 1-6 修改权限
  shell: |
    find /data/server -type f -exec chmod 644 {} \;
    find /data/server -type d -exec chmod 755 {} \;

- name: 1-7 复制 server.app.lua.j2
  template:
    src: server.app.lua.j2
    dest: "/data/server/login/etc/server.app.lua"

- name: 1-8 增加执行权限
  file:
    path: "{{item}}"
    mode: "0744"
  loop:
    - /data/server/login/p8_app_server
    - /data/server/login/server.sh

- name: 1-9 执行/data/server/login/server.sh start
  shell: "cd /data/server/login/ && ./server.sh start && sleep 3"
  args:
    chdir: /data/server/login/

- name: 1-10 检测进程状态
  shell: "pgrep -f /data/server/login/p8_app_server"
  register: start_stat
  ignore_errors: yes

- name: 1-11 如果检测不到进程，退出剧本
  fail:
    msg: "服务启动失败，已尝试启动但无进程"
  when: start_stat.rc != 0
